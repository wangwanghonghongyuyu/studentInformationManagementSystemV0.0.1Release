<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.smsys.dao.mapper.StudentEntityMapper">
    <!--结果集映射 学生实体类-->
    <resultMap id="studnet" type="StudentEntity">
        <id property="id" column="id"/>
        <result property="censusId" column="census_id"></result>
        <result property="telephone" column="telephone"></result>
        <result property="homeAddress" column="home_address"></result>
        <result property="name" column="name"></result>
        <result property="age" column="age"></result>
        <result property="valid" column="valid"></result>
        <result property="classId" column="class_id"></result>
        <result property="enrolId" column="enrol_id"></result>
    </resultMap>

    <!-- mysql分页通用结尾 -->
    <sql id="pageEnd">
        limit #{pageEntity.offsetPara,jdbcType=INTEGER} ,#{pageEntity.limitPara,jdbcType=INTEGER}
    </sql>

    <sql id="studnet_columns">
        `id`,
        `census_id`,
        `telephone`,
        `home_address`,
        `name`,
        `age`,
        `valid`,
        `class_id`,
        `enrol_id`,
    </sql>

    <sql id="studnet_property">
        /*在数据插入的时候对学籍id进行非空判断如果为空的那就给一个默认值0*/
        <choose>
            <when test="censusId==0||censusId==''">
                0,
            </when>
            <otherwise>
                #{censusId},
            </otherwise>
        </choose>
        #{telephone},
        #{homeAddress},
        #{name},
        #{valid},
        #{age},
        #{classId},
        #{enrolId}
    </sql>

    <!--插入的动态sql 对空值进行处理 key-->
    <sql id="insert_columns_key">
        <trim suffixOverrides=",">
            <if test="id!=0 ">
                `id`,
            </if>
            <if test="censusId!=null and censusId!=''">
                `census_id`,
            </if>
            <if test="telephone!=null">
                `telephone`,
            </if>
            <if test="homeAddress!=null and homeAddress!=''">
                `home_address`,
            </if>
            <if test="name!=null">
                `name`,
            </if>
            <if test="age!=0">
                `age`,
            </if>
            <if test="valid!=0">
                `valid`,
            </if>
            <if test="classId!=0">
                `class_id`,
            </if>
            <if test="enrolId!=0">
                `enrol_id`,
            </if>
        </trim>
    </sql>

    <!--插入的动态sql 对空值进行处理 value-->
    <sql id="insert_property_value">
        <trim suffixOverrides=",">
            <if test="id!=0 ">
                #{id},
            </if>
            <if test="censusId!=0">
                #{censusId},
            </if>
            <if test="telephone!=null and telephone!=''">
                #{telephone},
            </if>
            <if test="homeAddress!=null">
                #{homeAddress},
            </if>
            <if test="name!=null">
                #{name},
            </if>
            <if test="age!=0">
                #{age},
            </if>
            <if test="valid!=0">
                #{valid},
            </if>
            <if test="classId!=0">
                #{classId},
            </if>
            <if test="enrolId!=0">
                #{enrolId},
            </if>
        </trim>
    </sql>

    <select id="queryAllStudent" resultMap="studnet">
        SELECT <include refid="studnet_columns" /> FROM t_sys_student;
    </select>
    <!--学生个数统计-->
    <select id="selectCount" resultType="int">
        select COUNT(*) AS counts FROM t_sys_student ;
    </select>

    <!--查询学生根据学生 返回一个list-->
    <!--trim 动态查询 如果因为AND 不能直接在where后面-->
    <select id="queryStudentByStudent" parameterType="studentEntity" resultMap="student">
        SELECT
        <include refid="studnet_columns"/>
        FROM t_sys_student
        <trim prefix="WHERE" prefixOverrides="AND">

            <if test="id!=0 ">
                #{id},
            </if>
            <if test="censusId!=0 ">
                AND `census_id` = #{censusId},
            </if>
            <if test="telephone!=null and telephone!=''">
                AND `telephone`=#{telephone},
            </if>
                <if test="homeAddress!=null">
                AND `home_address`=#{homeAddress},
            </if>
            <if test="name!=null">
                AND `name`=#{name},
            </if>
            <if test="age!=0">
                AND `age`=#{age},
            </if>
            <if test="valid!=0">
                AND `valid`=#{valid},
            </if>
            <if test="classId!=0">
                AND `class_id`=#{classId},
            </if>
            <if test="enrolId!=0">
                AND `enrol_id`=#{enrolId},
            </if>
        </trim>
    </select>

    <!--修改家长信息-->
    <!--这时就需要进行动态SQL拼接，如下，使用trim就是为了删掉最后字段的“,”。主要不用单独写SET了，因为set被包含在trim中了-->
    <update id="updateStudentsById" parameterType="studentEntity">
        UPDATE `t_sys_student`
        <trim prefix="set" suffixOverrides=",">
            <if test="censusId!=0 ">
                 `census_id` = #{censusId},
            </if>
            <if test="telephone!=null and telephone!=''">
                 `telephone`=#{telephone},
            </if>
            <if test="homeAddress!=null">
                 `home_address`=#{homeAddress},
            </if>
            <if test="name!=null">
                 `name`=#{name},
            </if>
            <if test="age!=0">
                 `age`=#{age},
            </if>
            <if test="valid!=0">
                 `valid`=#{valid},
            </if>
            <if test="classId!=0">
                 `class_id`=#{classId},
            </if>
            <if test="enrolId!=0">
                 `enrol_id`=#{enrolId},
            </if>
        </trim>
        WHERE `id` = #{id};
    </update>

    <!--插入学生信息-->
    <insert id="insertStudent" parameterType="studentEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_sys_student` (<include refid="insert_columns_key"/>) VALUES (<include
            refid="insert_property_value"/>)
    </insert>

    <!--删除学生根据id-->
    <delete id="deleteStudentById" parameterType="int">
       DELETE FROM `t_sys_student` WHERE `id`=#{id}
    </delete>
</mapper>